Vagrant.configure("2") do |config|
    config.vm.box = "bento/ubuntu-18.04"
  
    def create_consul_host(config, hostname, ip, initJson)
      config.vm.define hostname do |host|
  
          host.vm.hostname = hostname
          host.vm.provision "shell", path: "provision.sh"
          host.vm.network "private_network", ip: ip
          host.vm.provision "shell", inline: "echo '#{initJson}' > /etc/systemd/system/consul.d/config.hcl"
          host.vm.provision "shell", inline: "service consul start with consul connect"

      end
    end

    def create_dashboard_server(config, hostname, ip, initJson)
      config.vm.define hostname do |host|
  
          host.vm.hostname = hostname
          host.vm.network "private_network", ip: ip
          host.vm.provision "shell", path: "provision.sh"
          host.vm.provision "shell", inline: "echo '#{initJson}' > /etc/systemd/system/consul.d/config.hcl"
          host.vm.provision "shell", inline: "service consul start"
          host.vm.provision "shell", path: "provision-dashboard.sh"
          host.vm.provision "shell", inline: "echo dashboard service started"
      end
    end

    def create_counting_server(config, hostname, ip, initJson)
      config.vm.define hostname do |host|
  
          host.vm.hostname = hostname
          host.vm.network "private_network", ip: ip
          host.vm.provision "shell", path: "provision.sh"
          host.vm.provision "shell", inline: "echo '#{initJson}' > /etc/systemd/system/consul.d/config.hcl"
          host.vm.provision "shell", inline: "service consul start"
          host.vm.provision "shell", path: "provision-counting.sh"
          host.vm.provision "shell", inline: "echo counting service started"
      end
    end
  
    serverIp = "192.168.99.100"
    serverInit = %(
      {
          "log_level": "INFO",
          "server": true,
          "advertise_addr": "#{serverIp}",
          "client_addr": "0.0.0.0",
          "data_dir": "/tmp/consul",
          "bootstrap_expect": 1,
          "encrypt": "jgRZfrj41tdxYNDElhIbDnTgRBEl1kifAYIn1KcIMjc=",
          "encrypt_verify_incoming": true,
          "encrypt_verify_outgoing": true,
          "verify_server_hostname": true,
          "ca_file": "/etc/systemd/system/consul.d/consul-agent-ca.pem",
          "cert_file": "/etc/systemd/system/consul.d/dc1-server-consul-0.pem",
          "key_file": "/etc/systemd/system/consul.d/dc1-server-consul-0-key.pem",
          "ui_config": {
            "enabled": true
          },
          "ports": {
            "grpc": 8502
          },
          "auto_encrypt": {
            "allow_tls": true
          },
          "connect": {
            "enabled": true
          },
          "performance": {
            "raft_multiplier": 1
          }
      }
    )
  
    create_consul_host config, "consul-server", serverIp, serverInit
  
    for node_number in 1..2
        nodename="consul-node-#{node_number}"
        clientIp="192.168.99.10#{node_number}"
  
      consulNode = %(
          {   
              "log_level": "INFO",
              "server": true,
              "client_addr": "0.0.0.0",
              "advertise_addr": "#{clientIp}",
              "retry_join": ["#{serverIp}"],
              "data_dir": "/tmp/consul",
              "encrypt": "jgRZfrj41tdxYNDElhIbDnTgRBEl1kifAYIn1KcIMjc=",
              "encrypt_verify_incoming": true,
              "encrypt_verify_outgoing": true,
              "ca_file": "/etc/systemd/system/consul.d/consul-agent-ca.pem",
              "cert_file": "/etc/systemd/system/consul.d/dc1-server-consul-0.pem",
              "key_file": "/etc/systemd/system/consul.d/dc1-server-consul-0-key.pem",
              "auto_encrypt": {
                "allow_tls": true
              },
              "ui_config": {
                "enabled": true
              },
              "ports": {
                "grpc": 8502
              },
              "connect": {
                "enabled": true
              },
              "performance": {
                "raft_multiplier": 1
              }
          }
      )
  
      create_consul_host config, nodename, clientIp, consulNode
  
    end

      dashboardServerIp="192.168.99.151"
  
      dashboardAgent = %(
          {   
              "node_name": "server-01",
              "server": false,
              "advertise_addr": "192.168.99.151",
              "retry_join": ["#{serverIp}"],
              "data_dir": "/tmp/consul",
              "encrypt": "jgRZfrj41tdxYNDElhIbDnTgRBEl1kifAYIn1KcIMjc=",
              "encrypt_verify_incoming": true,
              "encrypt_verify_outgoing": true,
              "verify_server_hostname": true,
              "ca_file": "/etc/systemd/system/consul.d/consul-agent-ca.pem",
              "auto_encrypt": {
                "tls": true
              },
              "ports": {
                "grpc": 8502
              },
              "connect": {
                "enabled": true
              }
          }
       )

  
      create_dashboard_server config, "server-01", "192.168.99.151", dashboardAgent
  
      countAgent = %(
          {   
              "node_name": "server-02",
              "server": false,
              "advertise_addr": "192.168.99.152",
              "retry_join": ["#{serverIp}"],
              "data_dir": "/tmp/consul",
              "encrypt": "jgRZfrj41tdxYNDElhIbDnTgRBEl1kifAYIn1KcIMjc=",
              "encrypt_verify_incoming": true,
              "encrypt_verify_outgoing": true,
              "verify_server_hostname": true,
              "ca_file": "/etc/systemd/system/consul.d/consul-agent-ca.pem",
              "auto_encrypt": {
                "tls": true
              },
              "ports": {
                "grpc": 8502
              },
              "connect": {
                "enabled": true
              }
          }
       )

  
      create_counting_server config, "server-02", "192.168.99.152", countAgent

  end